"""Initial

Revision ID: d16dbbe02a4f
Revises: 
Create Date: 2021-10-19 10:42:51.729578

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'd16dbbe02a4f'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('dsc_discount',
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_dsc_discount_id'), 'dsc_discount', ['id'], unique=False)
    op.create_table('prd_category',
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('parent_category', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['parent_category'], ['prd_category.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_prd_category_id'), 'prd_category', ['id'], unique=False)
    op.create_table('usr_user',
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('_password', sa.String(), nullable=False),
    sa.Column('admin', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_usr_user_id'), 'usr_user', ['id'], unique=False)
    op.create_table('crt_cart',
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('total_price', sa.Integer(), nullable=True),
    sa.CheckConstraint('total_price >= 0'),
    sa.ForeignKeyConstraint(['user_id'], ['usr_user.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_crt_cart_id'), 'crt_cart', ['id'], unique=False)
    op.create_table('ord_order',
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('total_price', sa.Integer(), nullable=True),
    sa.CheckConstraint('total_price >= 0'),
    sa.ForeignKeyConstraint(['user_id'], ['usr_user.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ord_order_id'), 'ord_order', ['id'], unique=False)
    op.create_table('prd_product',
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.Column('price', sa.Integer(), nullable=False),
    sa.CheckConstraint('price >= 0'),
    sa.CheckConstraint('quantity >= 0'),
    sa.ForeignKeyConstraint(['category_id'], ['prd_category.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_prd_product_id'), 'prd_product', ['id'], unique=False)
    op.create_table('usr_token',
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('access_token', sa.String(), nullable=True),
    sa.Column('refresh_token', sa.String(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('scope', postgresql.ARRAY(sa.VARCHAR()), nullable=True),
    sa.Column('_expired_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['usr_user.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_usr_token_id'), 'usr_token', ['id'], unique=False)
    op.create_table('crt_cart_item',
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('cart_id', sa.Integer(), nullable=True),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.Column('price', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.CheckConstraint('price >= 0'),
    sa.CheckConstraint('quantity >= 0'),
    sa.ForeignKeyConstraint(['cart_id'], ['crt_cart.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['product_id'], ['prd_product.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_crt_cart_item_id'), 'crt_cart_item', ['id'], unique=False)
    op.create_table('dsc_product_discount',
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.Column('discount_id', sa.Integer(), nullable=True),
    sa.Column('amount', sa.Float(), nullable=True),
    sa.CheckConstraint('amount >= 0'),
    sa.ForeignKeyConstraint(['discount_id'], ['dsc_discount.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['product_id'], ['prd_product.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_dsc_product_discount_id'), 'dsc_product_discount', ['id'], unique=False)
    op.create_table('ord_order_item',
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=True),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.Column('price', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.CheckConstraint('price >= 0'),
    sa.CheckConstraint('quantity >= 0'),
    sa.ForeignKeyConstraint(['order_id'], ['ord_order.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['product_id'], ['prd_product.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ord_order_item_id'), 'ord_order_item', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_ord_order_item_id'), table_name='ord_order_item')
    op.drop_table('ord_order_item')
    op.drop_index(op.f('ix_dsc_product_discount_id'), table_name='dsc_product_discount')
    op.drop_table('dsc_product_discount')
    op.drop_index(op.f('ix_crt_cart_item_id'), table_name='crt_cart_item')
    op.drop_table('crt_cart_item')
    op.drop_index(op.f('ix_usr_token_id'), table_name='usr_token')
    op.drop_table('usr_token')
    op.drop_index(op.f('ix_prd_product_id'), table_name='prd_product')
    op.drop_table('prd_product')
    op.drop_index(op.f('ix_ord_order_id'), table_name='ord_order')
    op.drop_table('ord_order')
    op.drop_index(op.f('ix_crt_cart_id'), table_name='crt_cart')
    op.drop_table('crt_cart')
    op.drop_index(op.f('ix_usr_user_id'), table_name='usr_user')
    op.drop_table('usr_user')
    op.drop_index(op.f('ix_prd_category_id'), table_name='prd_category')
    op.drop_table('prd_category')
    op.drop_index(op.f('ix_dsc_discount_id'), table_name='dsc_discount')
    op.drop_table('dsc_discount')
    # ### end Alembic commands ###
